<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20201.20.0326.1623                               -->
<workbook original-version='18.1' source-build='2020.1.2 (20201.20.0326.1623)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Orders (Superstore)' inline='true' name='federated.1wif3571e7dsxi16xathf1c7ogs1' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Superstore' name='excel-direct.0w12gkx02ac8y11fbujyn06vfqfl'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/big data and data management/project/Superstore.xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation join='left' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Orders].[Order ID]' />
              <expression op='[Returns].[Order ID]' />
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[Orders].[Region]' />
                <expression op='[People].[Region]' />
              </expression>
            </clause>
            <relation connection='excel-direct.0w12gkx02ac8y11fbujyn06vfqfl' name='Orders' table='[Orders$]' type='table'>
              <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
                <column datatype='integer' name='Row ID' ordinal='0' />
                <column datatype='string' name='Order ID' ordinal='1' />
                <column datatype='date' name='Order Date' ordinal='2' />
                <column datatype='date' name='Ship Date' ordinal='3' />
                <column datatype='string' name='Ship Mode' ordinal='4' />
                <column datatype='string' name='Customer ID' ordinal='5' />
                <column datatype='string' name='Customer Name' ordinal='6' />
                <column datatype='string' name='Segment' ordinal='7' />
                <column datatype='string' name='Country' ordinal='8' />
                <column datatype='string' name='City' ordinal='9' />
                <column datatype='string' name='State' ordinal='10' />
                <column datatype='integer' name='Postal Code' ordinal='11' />
                <column datatype='string' name='Region' ordinal='12' />
                <column datatype='string' name='Product ID' ordinal='13' />
                <column datatype='string' name='Category' ordinal='14' />
                <column datatype='string' name='Sub-Category' ordinal='15' />
                <column datatype='string' name='Product Name' ordinal='16' />
                <column datatype='real' name='Sales' ordinal='17' />
                <column datatype='integer' name='Quantity' ordinal='18' />
                <column datatype='real' name='Discount' ordinal='19' />
                <column datatype='real' name='Profit' ordinal='20' />
              </columns>
            </relation>
            <relation connection='excel-direct.0w12gkx02ac8y11fbujyn06vfqfl' name='People' table='[People$]' type='table'>
              <columns gridOrigin='A1:B5:no:A1:B5:0' header='yes' outcome='6'>
                <column datatype='string' name='Person' ordinal='0' />
                <column datatype='string' name='Region' ordinal='1' />
              </columns>
            </relation>
          </relation>
          <relation connection='excel-direct.0w12gkx02ac8y11fbujyn06vfqfl' name='Returns' table='[Returns$]' type='table'>
            <columns gridOrigin='A1:B297:no:A1:B297:0' header='yes' outcome='6'>
              <column datatype='string' name='Returned' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[Category]' value='[Orders].[Category]' />
          <map key='[City]' value='[Orders].[City]' />
          <map key='[Country]' value='[Orders].[Country]' />
          <map key='[Customer ID]' value='[Orders].[Customer ID]' />
          <map key='[Customer Name]' value='[Orders].[Customer Name]' />
          <map key='[Discount]' value='[Orders].[Discount]' />
          <map key='[Order Date]' value='[Orders].[Order Date]' />
          <map key='[Order ID (Returns)]' value='[Returns].[Order ID]' />
          <map key='[Order ID]' value='[Orders].[Order ID]' />
          <map key='[Person]' value='[People].[Person]' />
          <map key='[Postal Code]' value='[Orders].[Postal Code]' />
          <map key='[Product ID]' value='[Orders].[Product ID]' />
          <map key='[Product Name]' value='[Orders].[Product Name]' />
          <map key='[Profit]' value='[Orders].[Profit]' />
          <map key='[Quantity]' value='[Orders].[Quantity]' />
          <map key='[Region (People)]' value='[People].[Region]' />
          <map key='[Region]' value='[Orders].[Region]' />
          <map key='[Returned]' value='[Returns].[Returned]' />
          <map key='[Row ID]' value='[Orders].[Row ID]' />
          <map key='[Sales]' value='[Orders].[Sales]' />
          <map key='[Segment]' value='[Orders].[Segment]' />
          <map key='[Ship Date]' value='[Orders].[Ship Date]' />
          <map key='[Ship Mode]' value='[Orders].[Ship Mode]' />
          <map key='[State]' value='[Orders].[State]' />
          <map key='[Sub-Category]' value='[Orders].[Sub-Category]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U9995:no:A1:U9995:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Person</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Person]</local-name>
            <parent-name>[People]</parent-name>
            <remote-alias>Person</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region (People)]</local-name>
            <parent-name>[People]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[People]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B5:no:A1:B5:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Returned</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Returned]</local-name>
            <parent-name>[Returns]</parent-name>
            <remote-alias>Returned</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID (Returns)]</local-name>
            <parent-name>[Returns]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Returns]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B297:no:A1:B297:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' hidden='true' name='[Customer ID]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' hidden='true' name='[Order ID (Returns)]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[Order ID]' role='dimension' type='nominal' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' hidden='true' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='string' hidden='true' name='[Product ID]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
      <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
      <drill-paths>
        <drill-path name='Country, State, City'>
          <field>[Country]</field>
          <field>[State]</field>
          <field>[City]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.732648' measure-ordering='alphabetic' measure-percentage='0.267352' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:City:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Amarillo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Baltimore&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bozeman&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cary&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Clinton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cuyahoga Falls&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Durham&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fargo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Glendale&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hampton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Huntington Beach&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Knoxville&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lawton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Loveland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Melbourne&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Monroe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;New Rochelle&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Omaha&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pearland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Portage&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rio Rancho&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Peters&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Santa Clara&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Summerville&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Troy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Watertown&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;York&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aberdeen&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Athens&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Billings&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Burlington&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chicago&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Coppell&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Denver&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Elyria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Frisco&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Greenwood&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hillsboro&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jonesboro&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lakewood&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lodi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Marietta&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Minneapolis&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Muskogee&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Norwich&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Palm Coast&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Plantation&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Redmond&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Round Rock&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;San Jose&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Southaven&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Thomasville&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Virginia Beach&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Wichita&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Alexandria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Aurora&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bolingbrook&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Canton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Citrus Heights&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Costa Mesa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dover&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eugene&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gastonia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hackensack&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Homestead&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kenosha&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Las Cruces&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Longview&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mason&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Missoula&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;New Albany&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Odessa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pasadena&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pompano Beach&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Renton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Saint Charles&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sandy Springs&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Springfield&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tinley Park&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Warwick&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Woodland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Antioch&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Baytown&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Broken Arrow&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chandler&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Colorado Springs&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Davis&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Eau Claire&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fort Collins&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Grand Prairie&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Helena&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Inglewood&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;La Quinta&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lehi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Madison&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Meridian&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Moreno Valley&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Niagara Falls&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Orland Park&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Perth Amboy&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pueblo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rock Hill&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Salt Lake City&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Seattle&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tamarac&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Twin Falls&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;West Allis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Anaheim&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bangor&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brentwood&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cedar Hill&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Clovis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dallas&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Eagan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Farmington&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Glenview&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Harlingen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Huntsville&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;La Crosse&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Layton&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lowell&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Memphis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Montebello&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;New York City&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ontario&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pembroke Pines&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Portland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Riverside&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saint Petersburg&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Santa Fe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sunnyvale&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tucson&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Waukesha&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Yucaipa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Allen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Austin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bossier City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Carlsbad&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Clarksville&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cottage Grove&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Draper&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Evanston&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Georgetown&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hagerstown&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hoover&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kent&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Las Vegas&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lorain&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mcallen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Missouri City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;New Bedford&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Oklahoma City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pasco&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Port Arthur&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Revere&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Cloud&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sanford&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sterling Heights&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Toledo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Woodstock&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Arvada&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bethlehem&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bullhead City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chester&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Conway&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Delray Beach&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Elkhart&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Fremont&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greensboro&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hickory&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jefferson City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lakeland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Little Rock&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Maple Grove&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Milford&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Murray&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;North Las Vegas&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Oxnard&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Plainfield&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Redding&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Roseville&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;San Francisco&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Smyrna&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Texas City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Vancouver&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Wheeling&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Abilene&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Atlanta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bloomington&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Caldwell&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chico&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Coral Gables&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Des Moines&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Encinitas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gaithersburg&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gresham&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Holland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jupiter&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lancaster&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Logan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Marion&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Miramar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Naperville&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Oak Park&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Park Ridge&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pleasant Grove&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Redondo Beach&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Royal Oak&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;San Luis Obispo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sparks&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Thornton&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Visalia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Wilmington&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Arlington&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bellevue&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Buffalo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chattanooga&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Concord&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Decatur&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;El Cajon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Franklin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Greeley&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hesperia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jacksonville&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lake Elsinore&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Linden&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mansfield&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Middletown&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mount Vernon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Norman&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Overland Park&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pico Rivera&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rapid City&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rome&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;San Clemente&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sioux Falls&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tempe&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Vacaville&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Westland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Allentown&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Avondale&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bowling Green&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Carol Stream&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cleveland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Covington&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dublin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Everett&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gilbert&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Haltom City&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hot Springs&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kirkwood&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Laurel&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Los Angeles&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Medford&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mobile&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;New Brunswick&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Olathe&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Passaic&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Port Orange&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Richardson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Louis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Santa Ana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Stockton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Torrance&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Waterbury&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Woonsocket&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Apopka&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Beaumont&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Broomfield&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chapel Hill&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Columbia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Daytona Beach&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Edinburg&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fort Lauderdale&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Grand Rapids&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hempstead&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iowa City&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lafayette&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Leominster&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Malden&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mesa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Morgan Hill&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Noblesville&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Orlando&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pharr&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Quincy&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rockford&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;San Angelo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sheboygan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tampa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tyler&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;West Jordan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Apple Valley&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bedford&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Brownsville&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Charlotte&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Columbus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dearborn&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Edmond&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fort Worth&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Grapevine&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Henderson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Irving&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Laguna Niguel&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lewiston&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Manchester&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mesquite&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Morristown&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Norfolk&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ormond Beach&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Philadelphia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Raleigh&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rockville&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;San Antonio&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Shelton&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Taylor&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Urbandale&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;West Palm Beach&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Arlington Heights&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bellingham&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Buffalo Grove&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chesapeake&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Conroe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Deer Park&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;El Paso&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Freeport&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Green Bay&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hialeah&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jamestown&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lake Forest&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lindenhurst&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Manteca&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Midland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Murfreesboro&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;North Charleston&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Owensboro&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pine Bluff&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Reading&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Romeoville&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;San Diego&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Skokie&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Texarkana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vallejo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Westminster&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Asheville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Beverly&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Burbank&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cheyenne&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Coon Rapids&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Deltona&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Elmhurst&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fresno&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greenville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Highland Park&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Johnson City&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lakeville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Littleton&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Margate&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Milwaukee&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Murrieta&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;North Miami&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Palatine&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Plano&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Redlands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Roswell&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;San Gabriel&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South Bend&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;The Colony&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vineland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Whittier&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Andover&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bartlett&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bridgeton&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cedar Rapids&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Coachella&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Danbury&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;East Orange&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fayetteville&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Goldsboro&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Harrisonburg&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Independence&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;La Mesa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;League City&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lubbock&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mentor&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Montgomery&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Newark&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Orange&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pensacola&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Providence&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rochester&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Salem&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Santa Maria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Superior&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tulsa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wausau&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Yuma&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Altoona&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bakersfield&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Boynton Beach&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Carrollton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Clifton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cranston&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dubuque&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fairfield&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gladstone&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hamilton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Houston&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kissimmee&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lawrence&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Louisville&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Medina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Modesto&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New Castle&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Olympia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Paterson&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Port Saint Lucie&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Richmond&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Paul&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Santa Barbara&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Suffolk&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Trenton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Waterloo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Yonkers&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Akron&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Atlantic City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Boca Raton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Camarillo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chula Vista&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Coral Springs&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Des Plaines&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Englewood&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Garden City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Grove City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hollywood&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Keller&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lansing&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Long Beach&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Marlborough&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mishawaka&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nashua&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Oakland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Parker&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pocatello&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Redwood City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sacramento&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;San Marcos&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Spokane&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Thousand Oaks&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Waco&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Wilson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Appleton&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belleville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bryan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Charlottesville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Commerce City&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dearborn Heights&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Edmonds&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Frankfort&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Great Falls&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hendersonville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jackson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lake Charles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lincoln Park&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Manhattan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Miami&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mount Pleasant&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Normal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Oswego&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Phoenix&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rancho Cucamonga&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rogers&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;San Bernardino&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sierra Vista&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Temecula&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Utica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Westfield&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ann Arbor&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bayonne&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bristol&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Champaign&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;College Station&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Danville&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;East Point&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Florence&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Grand Island&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hattiesburg&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Indianapolis&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;La Porte&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Macon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Meriden&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Moorhead&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Newport News&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Orem&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Peoria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Provo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rochester Hills&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Salinas&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Scottsdale&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tallahassee&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tuscaloosa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Waynesboro&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Albuquerque&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Auburn&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Boise&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cambridge&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cincinnati&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Corpus Christi&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Detroit&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Escondido&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Garland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gulfport&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Holyoke&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kenner&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Laredo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Longmont&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Marysville&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mission Viejo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nashville&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Oceanside&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Parma&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pomona&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Reno&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saginaw&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;San Mateo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Springdale&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tigard&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Warner Robins&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Woodbury&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:State:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pennsylvania&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;South Carolina&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Alabama&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Maryland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rhode Island&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Montana&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nebraska&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tennessee&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Minnesota&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.1wif3571e7dsxi16xathf1c7ogs1'>
      <datasources>
        <datasource caption='Orders (Superstore)' name='federated.1wif3571e7dsxi16xathf1c7ogs1' />
      </datasources>
      <datasource-dependencies datasource='federated.1wif3571e7dsxi16xathf1c7ogs1'>
        <column datatype='string' name='[Category]' role='dimension' type='nominal' />
        <column datatype='string' name='[Region]' role='dimension' type='nominal' />
        <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
        <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
        <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
        <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
        <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
        <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Category:nk]'>
        <groupfilter function='level-members' level='[none:Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Region:nk]'>
        <groupfilter function='member' level='[none:Region:nk]' member='&quot;West&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Segment:nk]'>
        <groupfilter function='member' level='[none:Segment:nk]' member='&quot;Home Office&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Sub-Category:nk]'>
        <groupfilter function='level-members' level='[none:Sub-Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
    </shared-view>
  </shared-views>
  <worksheets>
    <worksheet name='City Profit Performance'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Superstore)' name='federated.1wif3571e7dsxi16xathf1c7ogs1' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1wif3571e7dsxi16xathf1c7ogs1'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Category:nk]</column>
            <column>[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Segment:nk]</column>
            <column>[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Region:nk]</column>
            <column>[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Sub-Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1wif3571e7dsxi16xathf1c7ogs1].[Longitude (generated)]' field-type='quantitative' max='-7360829.9873083942' min='-15181366.763121616' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1wif3571e7dsxi16xathf1c7ogs1].[Latitude (generated)]' field-type='quantitative' max='6743276.3355252799' min='1851470.2674262552' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.1wif3571e7dsxi16xathf1c7ogs1].[sum:Profit:qk]' field-type='quantitative' max-size='1' min-size='0.01' type='centersize' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:City:nk]' />
              <size column='[federated.1wif3571e7dsxi16xathf1c7ogs1].[sum:Profit:qk]' />
              <lod column='[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Country:nk]' />
              <lod column='[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:State:nk]' />
              <lod column='[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:City:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.4832596778869629' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1wif3571e7dsxi16xathf1c7ogs1].[Latitude (generated)]</rows>
        <cols>[federated.1wif3571e7dsxi16xathf1c7ogs1].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{C46D4D60-FC54-4952-AB4B-9A810A9A68CD}' />
    </worksheet>
    <worksheet name='Profit'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>PROFIT</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Superstore)' name='federated.1wif3571e7dsxi16xathf1c7ogs1' />
          </datasources>
          <datasource-dependencies datasource='federated.1wif3571e7dsxi16xathf1c7ogs1'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Category:nk]</column>
            <column>[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Region:nk]</column>
            <column>[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Segment:nk]</column>
            <column>[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Sub-Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1wif3571e7dsxi16xathf1c7ogs1].[mn:Order Date:ok]' value='iLLL' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f9a655' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1wif3571e7dsxi16xathf1c7ogs1].[sum:Profit:qk]</rows>
        <cols>([federated.1wif3571e7dsxi16xathf1c7ogs1].[yr:Order Date:ok] / [federated.1wif3571e7dsxi16xathf1c7ogs1].[mn:Order Date:ok])</cols>
      </table>
      <simple-id uuid='{B495AB5C-A9C0-4D5C-85A0-043BBEE9E376}' />
    </worksheet>
    <worksheet name='Profit Performance'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Superstore)' name='federated.1wif3571e7dsxi16xathf1c7ogs1' />
          </datasources>
          <datasource-dependencies datasource='federated.1wif3571e7dsxi16xathf1c7ogs1'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order Date]' derivation='Quarter' name='[qr:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1wif3571e7dsxi16xathf1c7ogs1].[yr:Order Date:ok]'>
            <groupfilter function='member' level='[yr:Order Date:ok]' member='2016' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1wif3571e7dsxi16xathf1c7ogs1].[yr:Order Date:ok]</column>
            <column>[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Segment:nk]</column>
            <column>[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Region:nk]</column>
            <column>[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Sub-Category:nk]</column>
            <column>[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Category:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Category:nk] / [federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Region:nk])</rows>
        <cols>([federated.1wif3571e7dsxi16xathf1c7ogs1].[qr:Order Date:ok] * [federated.1wif3571e7dsxi16xathf1c7ogs1].[sum:Profit:qk])</cols>
      </table>
      <simple-id uuid='{B6E3A113-0F30-4913-9C1C-067DB1774022}' />
    </worksheet>
    <worksheet name='Regionwise Sales'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Superstore)' name='federated.1wif3571e7dsxi16xathf1c7ogs1' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1wif3571e7dsxi16xathf1c7ogs1'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='None' name='[none:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Region:nk]</column>
            <column>[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Segment:nk]</column>
            <column>[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Sub-Category:nk]</column>
            <column>[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1wif3571e7dsxi16xathf1c7ogs1].[Longitude (generated)]' field-type='quantitative' max='-5770864.8493399564' min='-15601358.941451123' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1wif3571e7dsxi16xathf1c7ogs1].[Latitude (generated)]' field-type='quantitative' max='7582986.9742329847' min='1433937.1032667807' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:State:nk]' value='#000000' />
            <format attr='font-size' data-class='subtotal' field='[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:State:nk]' value='14' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:State:nk]' value='12' />
            <format attr='font-weight' field='[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:State:nk]' value='bold' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:State:nk]' />
              <size column='[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Sales:qk]' />
              <lod column='[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Country:nk]' />
              <lod column='[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='2.1546962261199951' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1wif3571e7dsxi16xathf1c7ogs1].[Latitude (generated)]</rows>
        <cols>[federated.1wif3571e7dsxi16xathf1c7ogs1].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{DD11D88F-8569-4953-AB2E-9FFD19527091}' />
    </worksheet>
    <worksheet name='SALES'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Superstore)' name='federated.1wif3571e7dsxi16xathf1c7ogs1' />
          </datasources>
          <datasource-dependencies datasource='federated.1wif3571e7dsxi16xathf1c7ogs1'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Category:nk]</column>
            <column>[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Region:nk]</column>
            <column>[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Segment:nk]</column>
            <column>[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Sub-Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1wif3571e7dsxi16xathf1c7ogs1].[mn:Order Date:ok]' value='iLLL' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f9a655' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1wif3571e7dsxi16xathf1c7ogs1].[sum:Sales:qk]</rows>
        <cols>([federated.1wif3571e7dsxi16xathf1c7ogs1].[yr:Order Date:ok] / [federated.1wif3571e7dsxi16xathf1c7ogs1].[mn:Order Date:ok])</cols>
      </table>
      <simple-id uuid='{BEBB76BC-21A1-48C8-B564-24E4F4838B03}' />
    </worksheet>
    <worksheet name='SUMMARY'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Superstore)' name='federated.1wif3571e7dsxi16xathf1c7ogs1' />
          </datasources>
          <datasource-dependencies datasource='federated.1wif3571e7dsxi16xathf1c7ogs1'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Discount]' derivation='Sum' name='[sum:Discount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1wif3571e7dsxi16xathf1c7ogs1].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1wif3571e7dsxi16xathf1c7ogs1].[sum:Discount:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1wif3571e7dsxi16xathf1c7ogs1].[sum:Profit:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1wif3571e7dsxi16xathf1c7ogs1].[sum:Quantity:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1wif3571e7dsxi16xathf1c7ogs1].[sum:Sales:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Category:nk]</column>
            <column>[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Sub-Category:nk]</column>
            <column>[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Region:nk]</column>
            <column>[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Segment:nk]</column>
            <column>[federated.1wif3571e7dsxi16xathf1c7ogs1].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='60' />
            <format attr='cell-h' value='40' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
          </style-rule>
          <style-rule element='header'>
            <format attr='font-size' data-class='total' field='[federated.1wif3571e7dsxi16xathf1c7ogs1].[:Measure Names]' value='9' />
            <format attr='font-size' data-class='subtotal' field='[federated.1wif3571e7dsxi16xathf1c7ogs1].[:Measure Names]' value='9' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.1wif3571e7dsxi16xathf1c7ogs1].[:Measure Names]' value='10' />
            <format attr='font-weight' field='[federated.1wif3571e7dsxi16xathf1c7ogs1].[:Measure Names]' value='bold' />
            <format attr='text-decoration' field='[federated.1wif3571e7dsxi16xathf1c7ogs1].[:Measure Names]' value='none' />
            <format attr='font-family' field='[federated.1wif3571e7dsxi16xathf1c7ogs1].[:Measure Names]' value='Yu Gothic UI' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='subtotal' value='0' />
            <format attr='border-style' data-class='subtotal' value='none' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-weight' value='bold' />
            <format attr='font-family' value='Times New Roman' />
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='5' />
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='dashed' />
            <format attr='stroke-color' scope='rows' value='#1b1b1b' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1wif3571e7dsxi16xathf1c7ogs1].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Segment:nk]</rows>
        <cols>[federated.1wif3571e7dsxi16xathf1c7ogs1].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{D9361A62-5C8E-4C96-BA66-206311B72E42}' />
    </worksheet>
    <worksheet name='Sales Performance'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Superstore)' name='federated.1wif3571e7dsxi16xathf1c7ogs1' />
          </datasources>
          <datasource-dependencies datasource='federated.1wif3571e7dsxi16xathf1c7ogs1'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order Date]' derivation='Quarter' name='[qr:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1wif3571e7dsxi16xathf1c7ogs1].[yr:Order Date:ok]'>
            <groupfilter function='member' level='[yr:Order Date:ok]' member='2017' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1wif3571e7dsxi16xathf1c7ogs1].[yr:Order Date:ok]</column>
            <column>[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Segment:nk]</column>
            <column>[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Region:nk]</column>
            <column>[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Sub-Category:nk]</column>
            <column>[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1wif3571e7dsxi16xathf1c7ogs1].[sum:Sales:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Category:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Category:nk] / [federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Region:nk])</rows>
        <cols>([federated.1wif3571e7dsxi16xathf1c7ogs1].[qr:Order Date:ok] * [federated.1wif3571e7dsxi16xathf1c7ogs1].[sum:Sales:qk])</cols>
      </table>
      <simple-id uuid='{0D5B9E25-07D0-472B-BE12-58A5B71F7BDF}' />
    </worksheet>
    <worksheet name='Shippment mode trends'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Superstore)' name='federated.1wif3571e7dsxi16xathf1c7ogs1' />
          </datasources>
          <datasource-dependencies datasource='federated.1wif3571e7dsxi16xathf1c7ogs1'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1wif3571e7dsxi16xathf1c7ogs1].[yr:Order Date:ok]'>
            <groupfilter function='member' level='[yr:Order Date:ok]' member='2016' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1wif3571e7dsxi16xathf1c7ogs1].[yr:Order Date:ok]</column>
            <column>[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Segment:nk]</column>
            <column>[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Region:nk]</column>
            <column>[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Sub-Category:nk]</column>
            <column>[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Ship Mode:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Ship Mode:nk]</rows>
        <cols>([federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Category:nk] * [federated.1wif3571e7dsxi16xathf1c7ogs1].[sum:Sales:qk])</cols>
      </table>
      <simple-id uuid='{54DF5C05-1AC8-429B-AB52-80CFCCF1C3B9}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='20'>Executive Sales</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='900' maxwidth='1400' minheight='900' minwidth='1400' sizing-mode='fixed' />
      <datasources>
        <datasource caption='Orders (Superstore)' name='federated.1wif3571e7dsxi16xathf1c7ogs1' />
      </datasources>
      <datasource-dependencies datasource='federated.1wif3571e7dsxi16xathf1c7ogs1'>
        <column datatype='string' name='[Category]' role='dimension' type='nominal' />
        <column datatype='string' name='[Region]' role='dimension' type='nominal' />
        <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
        <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
        <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
        <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
        <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
        <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98222' id='18' param='vert' type='layout-flow' w='98858' x='571' y='889'>
            <zone h='5889' id='19' type='title' w='98858' x='571' y='889'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='92333' id='16' param='vert' type='layout-flow' w='98858' x='571' y='6778'>
              <zone h='92333' id='7' param='horz' type='layout-flow' w='98858' x='571' y='6778'>
                <zone h='92333' id='5' type='layout-basic' w='87429' x='571' y='6778'>
                  <zone h='37415' id='12' name='SALES' w='87429' x='571' y='20333'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='41363' id='13' name='Profit' w='87429' x='571' y='57748'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='13555' id='14' name='SUMMARY' w='87429' x='571' y='6778'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
                <zone fixed-size='160' h='92333' id='6' is-fixed='true' param='vert' type='layout-flow' w='11429' x='88000' y='6778'>
                  <zone h='6778' id='8' mode='dropdown' name='Profit' param='[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Segment:nk]' type='filter' values='relevant' w='11429' x='88000' y='6778'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='6778' id='9' mode='dropdown' name='Profit' param='[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Region:nk]' type='filter' values='relevant' w='11429' x='88000' y='13556'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='6778' id='10' mode='dropdown' name='Profit' param='[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Sub-Category:nk]' type='filter' values='relevant' w='11429' x='88000' y='20334'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='9889' id='11' mode='slider' name='Profit' param='[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Category:nk]' type='filter' values='relevant' w='11429' x='88000' y='27112'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontsize='20'>Executive Sales</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1050' minheight='1050' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='21' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98222' id='20' param='vert' type='layout-flow' w='98858' x='571' y='889'>
                <zone h='5889' id='19' type='title' w='98858' x='571' y='889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='114' h='13555' id='14' is-fixed='true' name='SUMMARY' w='87429' x='571' y='6778'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='37415' id='12' is-fixed='true' name='SALES' w='87429' x='571' y='20333'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6778' id='8' mode='dropdown' name='Profit' param='[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Segment:nk]' type='filter' values='relevant' w='11429' x='88000' y='6778'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6778' id='9' mode='dropdown' name='Profit' param='[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Region:nk]' type='filter' values='relevant' w='11429' x='88000' y='13556'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6778' id='10' mode='dropdown' name='Profit' param='[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Sub-Category:nk]' type='filter' values='relevant' w='11429' x='88000' y='20334'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9889' id='11' mode='slider' name='Profit' param='[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Category:nk]' type='filter' values='relevant' w='11429' x='88000' y='27112'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='41363' id='13' is-fixed='true' name='Profit' w='87429' x='571' y='57748'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{6DA4E0BC-1484-4F15-8905-AC42451B6639}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='SUMMARY'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Segment:nk]' type='filter' values='relevant' />
            <card mode='dropdown' param='[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Region:nk]' type='filter' values='relevant' />
            <card mode='dropdown' param='[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Sub-Category:nk]' type='filter' values='relevant' />
            <card mode='slider' param='[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Category:nk]' type='filter' values='relevant' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1wif3571e7dsxi16xathf1c7ogs1].[:Measure Names]</field>
            <field>[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Category:nk]</field>
            <field>[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0EE0881C-9DC1-4681-83FC-377E6FC90A48}' />
    </window>
    <window class='worksheet' name='Regionwise Sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card mode='slider' param='[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Region:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:State:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Region:nk]</field>
            <field>[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Sales:qk]</field>
            <field>[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:State:nk]</field>
            <field>[federated.1wif3571e7dsxi16xathf1c7ogs1].[qr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E60CAE38-DCB1-4415-B805-DD3E745A0862}' />
    </window>
    <window class='worksheet' name='Profit Performance'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card mode='slider' param='[federated.1wif3571e7dsxi16xathf1c7ogs1].[yr:Order Date:ok]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Category:nk]</field>
            <field>[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Product Name:nk]</field>
            <field>[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Region:nk]</field>
            <field>[federated.1wif3571e7dsxi16xathf1c7ogs1].[qr:Order Date:ok]</field>
            <field>[federated.1wif3571e7dsxi16xathf1c7ogs1].[sum:Sales:qk]</field>
            <field>[federated.1wif3571e7dsxi16xathf1c7ogs1].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{17031C80-F5EB-465E-95E4-94E318FFE027}' />
    </window>
    <window class='worksheet' name='Sales Performance'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card mode='slider' param='[federated.1wif3571e7dsxi16xathf1c7ogs1].[yr:Order Date:ok]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Category:nk]</field>
            <field>[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Product Name:nk]</field>
            <field>[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Region:nk]</field>
            <field>[federated.1wif3571e7dsxi16xathf1c7ogs1].[qr:Order Date:ok]</field>
            <field>[federated.1wif3571e7dsxi16xathf1c7ogs1].[sum:Sales:qk]</field>
            <field>[federated.1wif3571e7dsxi16xathf1c7ogs1].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2DDDBDEA-5C41-4D55-9802-134E8B35F01A}' />
    </window>
    <window class='worksheet' name='Shippment mode trends'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card mode='slider' param='[federated.1wif3571e7dsxi16xathf1c7ogs1].[yr:Order Date:ok]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Ship Mode:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Category:nk]</field>
            <field>[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Ship Mode:nk]</field>
            <field>[federated.1wif3571e7dsxi16xathf1c7ogs1].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0004A6FE-117C-4273-815B-524B93D4FB89}' />
    </window>
    <window class='worksheet' name='City Profit Performance'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card mode='slider' param='[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Category:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:City:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:Category:nk]</field>
            <field>[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:City:nk]</field>
            <field>[federated.1wif3571e7dsxi16xathf1c7ogs1].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{323AB53D-E6FB-45C5-849F-742AC951838E}' />
    </window>
    <window class='worksheet' name='SALES'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1wif3571e7dsxi16xathf1c7ogs1].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{951D2B0D-1B11-42D2-9C9F-4330ECEF8782}' />
    </window>
    <window class='worksheet' name='Profit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1wif3571e7dsxi16xathf1c7ogs1].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5F21FA58-62A7-4DD3-A26B-B1B3BE31AA3F}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Profit'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='SALES'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='SUMMARY'>
          <zoom type='fit-width' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{5CD18EE3-F836-4EB2-B940-7B8F7F7AD82D}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='City Profit Performance' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Profit' width='192'>
      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
    </thumbnail>
    <thumbnail height='167' name='Profit Performance' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Regionwise Sales' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='SALES' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO2dSXAs933fv73PvmCwLw9vIUE+iotkUrQUWrQkynbsKpcvTqVS5TgXX3LI
      MYeknKpcfE0ucWxXxSm7HMsupxTvsmRZlERKNqVHmutb+YCHHbNvPb0v/xwGwAMwPT3dPT0z
      wEN/bsD08v/P9K///99OEUIIIiIuKfSkBxARMUlGKgCiKI7y8hMlmtuTATvpAQRFlVrY3NlD
      Mj0FsVFBIjsN3hKhC1NYncvh1q338fJPfx7MpAcagE6zht2DA2Rz06hWK8jPLMBs7oCfexZ6
      bQcaODx94ypoipr0UAOjyW082t5DIp2D1Kwili4gBgUqk0KOJyg3RFy7fgM8O9pNyoXdAgmJ
      DFJxAZYhIz+7CltXMDc/D8s0sL+7g3gihYuq3CSzU4hxDDqNNq6s3YQutbE4PwvNtEEzNDRJ
      gnVRJ3cIH08jkxAAS0U6vwxiqJibX4BlGtjd3YNtaJAUfeTjuLACUNtdx06lg2QihdLeOjQL
      2N/d6X55oFArH6DdUSY9zEBsPfgYdZkgl09i4/5dWBSLne1t7O/tgWVZGJoK84LbLhoHj/Co
      1EIsnkK1+AiqaR/+frtIpFKwCYFhGCMfBzVKK5Aoikin0yO5NiEEhBBQp7YBBIQAFEUDIABF
      YVSbhLHPjRAQUDj+1wWd2xHuv9/xJDHqXd5IdQDTNNFut0d5i4mhKAqeVAvykzy3s4QiAK1a
      CbvFCqbnFgFiQZFkXL26CpZlR/4mmRQURUVzewIIRQAkWQbL8SgeHKBR3MRzr74B27ZhWRZM
      0wzjFueOaG5PBqEIQKEwjdbmNqYKBWQzCVT2tjDz3DNgGAYse2Etra5Ec3syCGWWfDyFZ569
      eUahiYg4/4QiABRFRQ9/xIXkwvoBIiLCIBKAiEtNJAARl5pIACIuNZEARFxqIgGIuNREAhBx
      qYkEIOJSEwlAxKUmEoCIS00kABGXmkgAIi41kQBEXGoiAYi41IQiAK1aGffuP4DcaULSLVRr
      9TAuGxExckLJB6jV64CholwuYae6hZdeeA62bR+nRT6JWJYVze0QVVURi8VGOKLREYoAqLqJ
      2akMag0ZuWwaiqIgHUuDoijQ9JO5y6JpOprbIV//+tfxG7/xGyMc0egIRQCuX72C/UoT15+6
      DpuJQ1c6x1liT2qmWDS3xxSLxQv7XYQiALFkBteTmeO/hUtSUiOiW+CqUqlMehiBeTLX8Iix
      0RWA8qSHEZhIACKGghACXe5MehiBiQQgYihs24alX8wixEAkABFDQggBz9hjqeQ8CiIBiBgK
      QghSAnNuuso0Gg1fx0cCEDEUtm0jKTDodM6HHvDHf/zHvo6PBCBiKAghyCR4yLI86aGAEIK9
      vT1f50QCEDEUqqqikEmcixXANE2Uy/5MspEARAyFqqqYyiQgSdKkhwLDMNBpN32dEwlAxFDo
      uo75QgbNpr8HbxQYhgHG1nydEwlAxFAoioJkXIBl+HvwRoFhGOAp01dzj0gAIoZCVRXEBQ62
      OfqWpoMwDAOZGAtVVT2fEwlAxFDouo6YwMPUvT90o0JVVUyleSiKd890JAARAIA7d+4EOk9T
      VSRi/LnYAqmqilxS8GWSDUUAmvUKdnZ2ICsKTJv4WoIizgdvvvlmoPMUWUZc4ECTyTfVE0UR
      s/mUL4tUKPkAiVQG9UoFYk1H0xCQSaexcEFT5C4rrVYr0HmGYUBIs7DNya8AuqZivpDxNZdQ
      BIBjWViMgBRP4/ZmEUuvzEdtUi8YrVbreD5+5qYoCvgpFpbenvj3ocgS8skYaq2m57GEIgCG
      ImJmYQUc6eDzr6xAbNWRmpt9otttPmlzazabx/PxMzfD0BHjOcA2Jv596JqGTDKOkqF5Hks4
      bVKTOfAAgCnwANKx2TAuGzFGAocy2IdvWmvy4dC6piCdiUFvj1kJjrjYEEJQrwer5WSb3Qef
      weRLxHRXgBh0JRKACJ+QgI4s5ugJsievD9mWAYHnoGuRHyDCB4QQECuYANiHWx9DPQfBcIcP
      Pm17345FAhABwN9Dcwq7u/VJxriJ+3+4w6fZNqJQiAgf6LoOjibBTj7c+qTiwsRDoo+80dEK
      EOELURSRTgZ0XB6uADGenXxSzKEwWma0AkT4oNlsIpeKBzv58KHLJIWJCwB1GI5B+1DIIwGI
      QKvVDL4CkO4KkBD4iW+BjixZtqnCtm1P50QCEIFms4VsKhHs5MMtUPocrADHwsh7zwmIBCAC
      ktRBNuAW6MgMmk7E0G63wxyWb45WgBhHe84JiAQgAp12G3GB830eIQTkcAWgaWqiSTGWZYFB
      d9sT5xlomrfo1EgAIgI7wQghYKiu+ZSh6YmmRZqmCfpwLDGO9qyPRAIQARIwlp8QApp037o0
      RQUOpwgDwzAQ5xkAQDYV91ylIhKACFABvcCEkGPFk6bpiSbFGIYB6nALlEnGIEveFPJIACKG
      EgD68KGjaWqiecGmaYKju22aBI6F6jEiNJR8gNLeFhodDQv5ODpUCoam4+ryXBiXjhgDfmJn
      Tp1n28crAADQZHIh0YZh4HAHBIFnodW96QDhCEC5Co5nUW/ouHewj597/dUoJfIiYekghPhO
      iTRNE7CtY6eTockT+05EUYTAM7BtGxzLQJZET2MJRQBmpqdQb3fAx+J4+aWr2N49wPUri09c
      2uBJnpS5EUJA2QYoivKdEmkYBhgKxy1VaWJN7DvRNA2pRAw0TUPgaZi66mksoYx2YeUaFk78
      PZtPhXHZiDERVAfQdR08+1iNpOzJWYFkScJUjD8xFm9zipTgiMBmUFVVwXHM439MMCtM0xTw
      J974tkenXCQAl5zuFijYg6seVoU7IuhKEga6poLnHgsATaIVIMIDqqoeW0/8omka4sJjAbAN
      zXMUZtgosgyBfywAXr3bkQBcctrtduBAOE1TwbGPpUfgmImlRZqGDv7Edoz2WKYlEoBLTrPZ
      DCwAiqJAOLHtSCcmlxapayoE7nFAn+0xKywSgEuOOMQKoGsaYieiSJMxbmLN8ixDA33oCQa6
      CfJeIkIjAbjkNIZYAVRVPbXvTsT4iSXFHBXoOh6L4G07FgnAJUcURSTjQqBzVVXt1gU9JBHj
      JtYwmzpTnl1gvSXFRAJwydEU6ZQp0w+6rp1SgnPpCXaLPGOCjXFUJAARHhiiqG3XDHpSB5hg
      Yrx1egVIxQVPq1EkAJccy/BeR/MsxDJBUY8VT5qmYKiTUYLpM8V585mEp0YZkQBccoZpbXQ2
      BZKhaZgBQ6uHxTJOj8VrkdxIAC451BBbIIY6/TdNU5PrE3AmnEPgGMidaAsUMQBLD74Fss88
      7AxNTyQrjBDSowQLHHdcLdqNSAAuMcOURQd6BYCiJlMaxbKsnuK+PMdCkQavAOFkhO1vo9lR
      sTCTAxGykNptLM7PhHHpiBEzTAQnjd6K0pPoFGOaJrgz+zGapgAP+QnhNMkzDFiGAU1q44NP
      tvClL74cpUReFCwdtm0HSomEbfZEf1q6OvbvRVEU0MTuGYvpIUUzFAFIpjKwDRUtycD11RWU
      yjWsLs48MWmDTjwJcyOEAKYGmqYDpUTCNo/TIY+gMf60SEIIOJbqHYttDhxLKCNNZ7KguTjS
      yRgIxcAyJ98xMMIbZ0MIfGH3bneCZpcNg2maENhedZbykBQTihLMcjyymRRohgVDU+D5wa71
      27dvY2dnJ4zbRwREkiTEuIDZMOhVggFMxAyqadpxicaTeCn34rgCqPUtfPhpBZvlBv71L//c
      8CN0YGNjHSzLYmVlZSTXjxiMKIrIpQM2xkCvHwCYTFqkJElIJRz6G3go1ei4AjBCEvvVNl5+
      7vrQg+uHpiqol/ZGdv2IwTSbTWSSwQXAaQUgltHVLcbI2dzkI1jKHqgE99kCUdB0BQ4CHhqm
      roJokwmdjegyTDokIQSUQyW4hMCOPSBOliTE+N7NTJwfnBPgKAC2qaFdr+L2/Y1wRuiApWuw
      ZW8VfCNGQ6NeD94Yw7ZBkd4E+HQyNvasMFWVT1WEOMKtUUaj0QDgIACEELz1w3eQzyTA8AH7
      RnnB1gFtcLRexOjoSB1kAvYGO1kZ+iSTWAF07XRm2hExjnZcASRJwu/93u8BcBAAiqLw2qsv
      odYxPNdWCYKtq5hNsyiVSiO7R4Q7sth2fHN6obsF6l0BUnHBUxhymKiyfCoz7Yh0gnfsE3D/
      /n20m31WAADg4hl8/sXnwAoBG6d5wdJxZTaL7e3t0d0jwhWWCh62QAg5bkl0klR8/HnB/VaA
      qUzSURi31u9jaTYHwHELZOPBdgWWXIeqBo8UHARNTCxMZ7G3EwnApLCGiN3vWnp6BSCTio89
      L9jQVbBMrz9D4FhoDn0CpNresdXIYQWgsLd+ByKVwdJ0JvTBHmEaKuIxDqpYHdk9ItwZJhfA
      tm0Qq9fEKHAstBG+OJ0gfeYh8CzkMxGhhBDYYvn47551g6Io/Pwv/yoAAntE5lxCCGjbAMsw
      0MX6aG4SMZghQqENw0DMoaYiQ9O+eoW99957ePnllwOPA8ChObZXB+A5FvoZYWw2m8gLFo5e
      uy6hEBRoajSeAMuyjl3XRI1MoZNiGK/t2ZIoR9A0BV3zZga1bRt/+Id/EHgMx9fpk4QT4zno
      Z3KUHz3awLX5xzubiSTEWJYF9jBunDGlJyOs+IJBCPFcPtCJblEsJwGgYeneAuIMw8De1vrw
      nuM+1a27vYtPrwCPHtzFlfn842OGu3MwTNM8zuJfyCciU+iECFoWHejG4Ds112ZoynOEqaZp
      yLH60GZThnKpSH1mm9ep7iIRe1wIbGIrwJEJbWk6HZlCJ4UVPHTZMHRH0yNFUZ4bZouiiKcX
      s9jf3w88DqC3IsRJTla9sG0btlQ5/flQdz6EEIIPP/oYmlhFS9ZxUKy4Hq8oChJC98ubL2RQ
      2o/CoidBv72zFxRZOVUV7iRecwLq9TpevrmKnSFfgG55zeTENq9Wq2FKOO37CCUhplrchWIS
      mIqIW/c38doXfso1JbLVaiEVF2DbNmI8B7FeunB6wEVPibQsC/SJlEa/KZGKImOKZx0bYtiG
      5um7qVUrWJrJ4qPKwVDfJeWQmnkEMfXja9+5cwc3FnNdE67djRQNRQBUTYfUrKKVZ3H1yiIq
      tTquzE/3Ta2TZQmZVBw0TYOmAaLWL1x64UVPiZQkCelk7DiN0G9KpK7riPF8TxoiALC07em7
      aTXr+NxsHu8/aAf+Lm3bBkPZjuMAAGI87hZ5sL2Bz60WuimgNA2WZcMRgJWrNzC3uAKWoUAo
      FqbLngwAOqKI+RMKFG1MpqT2ZabRaCCfCR7qoqkqYsleJRjoJsZ7QRabSC4JsJVi4HEctWrt
      x1FOAMuyXQ/wM6erlYSmBPM8D5rhwNAUBMG93HZHbJ/K4KF10VMzg4jwaLfbSAcsiw4Aqqb1
      1QG8pkWahzZ6SwluBTIMA25ZnUc5AbZtgzcaPZ9PxAqkKsqpDJ6FqSSKxeBvgXHx8ccfT6wD
      Stg0m01k08FXAEPXHM2ggI/EeLNroxegBe4tZpomeJclQGApqKqKarWKmUTvcRMRAEWWTn15
      K3M5bG5uTmIovnj77bc91Zy/CLRaLeQCJsMAALGtU5WhT8IxlCellujdvIGl6XTgF6BhGI5h
      2Ucc5QQ8/PRTXF/I9Xw+GT+AoZ368mZyKdTKw9mCx8GTVMWiI4pIBUyGAdxt715CogkhoA5N
      lEvTmcC+IMMwwHP9H+NEjIMkSdjb+hRLs/mezyciAGfrtcQFHnLT3XdwHth5gkK3LUMdLtbL
      IRvsiLjADhQA0zTB091rFLJJVEvBXoBdn5LzVgwAcqk4Wq0WlPq+o+NuIgJwdo9I0xSIev7T
      Iy3lyUniH7Z8iVNC/BHphDBwq6hpGujDMcRjPNSAUcGyLCMZ71+HKhnn0RHboJWa4+eTWQEc
      YlBs5XxHhRqGAdp6Mvb/AIYKhQbQNwANAOICN3AFkGUZSb67AjE0DUPqtdB4QZKkU93qzyJw
      HPZ2tlHoo++fixUA6FoCzrOC2Wg0kO9j976QDCkAtkMyzBGpOD8wK6xer2Mmnzr+m9KDra6a
      qpzqEH8Wnmfx4fvv4qmlKcfPz80KsFRIYXd3d+T3Xl9fD5SzWq1WMZ0eYZWMMTNsDU+HUpzH
      ZJJxtNtt1/PrtSpyqcev5aBh8YbunJdwRJznsHn/YyzN9FqAgAkIACHEMQjr6sIUdsdgZfnm
      N/82kMVhb3cHC9PZEYxoMgyrA5xtTH0SjmVgDPAG12tVTGWTx3/PZARUKv4NIbIk9XfIAWAY
      GqvT8b7VL8YuALZtg6V77bbZVBzVMZRKlJpVlAPkH3RadaQSwT2n5w2v4Qp9cVGCGZoeGBIt
      tZunahLN55OBdgCGobuuAADwH3/9F/p+NnYBME3TsYtIXOCgic6aepikGQ2thv9E/E6zGrih
      9HmE8tA9xQ23B9xLu1RTk075gpZm8ygd+DeF6prqqgMAwHQu1fezsQuAZVmOJjSKomBIo02Q
      t20baUaH3PZvcbBVsa/n80IypBLMuDw53RXAfYtlaaerxyViPDoBfEHE1PtGgnphIgLA97kr
      M+Ko0Ha7jWyMgqX5vw9tPhkxQEcMowN09Tj3FWBgf64zDbo5loEZoFas5aMChRNjFwBVVeHg
      kAMAJFlzpEWVyuUyptM8bJ8CYNs2iP7khGwbhjFUM7tuXdD+8TeD0iK7rZl6dZAgviDaRRfx
      dP5QZx/SadXxcP0RNKUD1bTRavU3gYmi2Lcg6+JUaqQJ8rs721iezQOGv+KtnU4HmdiT01FW
      FEWkhgiFBpw7RJ7ELcS5WxWkdwWy1bb/ChFDdqQJJSGG42PgSRH7e7toagyurCx1e9AS0pOq
      1m63kYwLjhMtZLoVIq5fH01jjlppD69eSYKx9rtvQYdyek5Uq1Xk4iyaknk8J6e5XRS6yTDJ
      nt/gZHqk29wsywIN2/VhJXKz7zU0TQNLehtp5ON0N0w7693cTGwzWFmVwzmGlNNHYFMULM2A
      ppmgKOpYAM4OrtMRMdMneCmfSeBetTKyDiOdRgXCjRTSAoN2u41cztk5cpZi8QCL0xk0JfXU
      vMbdCSUs2u020mdaChE8ns+guXVzat2dVoUUi0aj4fgdK4oCge7dusznE9jb20Mm46MkZ0Bl
      nqA7z1AEQJZE6BaHpZUFLMUyUMQmaLqb83v2LavKMlKJmKNFReA56NWO5zezX1hLAkWlkY51
      BaBQKHg6r1mv4ulMAgB1PCenuV0Ums0mrmcSp34DCtTxfAbNzbIsgPTPBwCA5ZkMNjc3Hcse
      ttstTOeSPedfmZ/CR7u7eP75571PxjYDWecoqjvfUDa2+el5rK09hWQ6hzhHY2rKOe4C6KZD
      JvvsPwWOhSa5u9CDYts2LLlr/pwvpFEulwec8RixUXVuwnZB6XSCN8YADkujD3jmri0WsLuz
      5fhZpVxBPpPs+X8qIaBV85cY068wrlfGrtlpqoJkH4cSw9DHaXJhI4oicoeKbD6TQLPu3eZs
      yi1Xd/tFoyOKPVsgPxBCXKNBASAmcJAazi+ZZqOGKQcBiPEcdMm7JYgQAsqhV7Efxi4Auia7
      L1nGaOztlUoF+WR3x5dOxNBqePc6+zWbnmc2NjZw8PCDoa7RLW7sfgzLMDA6zo7NVqPu2J61
      6wz17qQ0TRP0EE0+gJCsQH7o2m3739ZSR/Ow7e/tYmWumxIn8BwM2ftWi2htAHMjGdc4IITg
      /r17eOtb38AyV8e//9pTQ11PVbu9HQYf6Pw2NzXJsaEFALCW9xegZVng3VzSHhi7AHTDcPvf
      lugjWgGKu/jswuOYEK9vdU3TwDvYrC8Kuzs7+PY3/gBPpST8uy+sgmFmBp80gH6l0c9yFOJ8
      tuiVqUkAnONzBKjdwrvxwQn7g0qieGHsW6BBFYnjHEaSGCOfCWajPG616vU6comLWwHuR3//
      5/j1L87gtRevdXWsEJBl2TUL64jFqa5Z8yxuL7mZTBwHBweextGtCHHBdIBBdtupTPy4h2uo
      nGnJSnTJkx2/VqthOhu8fMik0dul0IP4NE1zTDA/y7XFgmO5G8bun4yzMpdzFBonLMuCMOQS
      MP58gAEViTNxDrVauGHRtm2DqKf3/AmOeOpne7C/i/nC6HqljRJVVUGr4UfYapoGwUN71els
      sqfyt2VZIEb/FX46m0K94m0F0DTNNTPNC2MVgG5vWff99MJ0FtVquI3zJElCmj/9tk/HGE+B
      d616dSiT4SS5ffs2bl6ZDv26mqaC97ACCDwH/UyOh2EY4F0sN/EYB7HuzUcjy3IIMU1jxLbt
      gTpAMs6j0wp3C1StVlFInVbaptIxTyuNIjbOZSKMYfTG0pzlwd1PcPPafOj3VhXF0wpA01RP
      hKemaWDR/xlgaBpK01tApCiKQ/82YxUAy7LA0u4/msBxUDrh1gja2d7C8uzpAKvZfBqVsocv
      Wu+cy0SY3/2d/zkwh9rqlPuaG4dB0/rXBe3hjCm03W4jn3Z/a7N6sxtuMQBD172Pow9jFwBm
      gNbOcwxUKVwBqJUPMJ1Ln/pfOhFDszZ4qSXn1AmWZAz8+J1/dD1Gqe6MRHg1zblBnhNx2jhV
      haNcKmHmzG9xloUs76ltkiK7J8R7YfwC4NbQDF1vIDVE90InxHqpZ6lMJQTIorvb3bbtc9u7
      gDEVtPYe9N0GNRoNzPZGG4SCqqqetkAAcG0hf6qmaq1aGViU9+bqDO7dvTvw2pqmeBbEfoxV
      ADRNA8cMNj2SkMMhnIouURQ1MOxCFEWkzmkiDGsr4NVy31o6H7z/Pj63tjSSe9uW6dmnsDqf
      x/rDh8d/t9tNTGX7J6kDwEw+jdLO+sBrax4dcm6M9dftZiINtqjQVngrwMko0J7PBoRd1Go1
      FFLnsxSKqYr4zJU87t275/j59sb9kZlv3cqRnyUZFyDWH0d46nJnoA+B51horcH6maG7NOnw
      SDhdIm0LiqKC2DZsQvoqMB1RRDblwaSoy6FlW8myjGy/Z3hAamSpVMR8wX2/OgkURYFAmXju
      2gLe/ccfOB5DSeWhqiW44VYa/Sw8x8I8EeDmdXXnjNZAK5euKp4ccm6E8g01GzXsbt7HxsMH
      2NorY7fs/MYVxfapJsX9yCS4gaX1vNJNZ+wTeEV06Hr/H7NWLiI/RBeVUVEsFrE4nQHLMiDi
      Qc+DQggBkbznO/iFgr+XEzlhCbI9xnrNpZmB+eHWkOUdgZCC4WICD5NOYilL45/ubeHLr73i
      2Ca13W5jWeAGvt2zCR7VahWplPte0QvbW5tYnMk43jMTZ9BqtZDP9zZOAACxWUVimj+VK3s0
      p0m2Sd3d3cXcVAq2bWOK6aBer5/Ko93b28PyVMzXKuqnTaplaLBt71tDS25A1w/r9xiKp3Gt
      LRdw984dTE/3d+RRtgXbDrYFCrVN6v7ePmiwsOgEfvqVl1AqlXBlaaGn3aaqyEjlYgOX5qlM
      HM1mM5Q2pJXSPl6czTjeMyXQEEURMzPOEZKm3AbPPd4CHaXRsSw70TaplUoZLxayoGkarzy7
      hFs/+TH+5S/+0vHn7976Cb7yzIqvLZCfNqkMRXxde3EqgWaz2X2YTcXTubOFDG492gTLfrX/
      mIkJmg7mpT9qkxrKFujGM8/hmWfWkJ9ZRC4p4MrSguNxstTx5LmbzadRrYSzhMvN/umMSzM5
      V3vzeS2GpYqN42Kv84Usth98fOpzrVkcafgGcSmN7sTyTBbr6+swTROcixf4JALHQmm4xwQN
      qj/qhfGGQpi6J/OZwHNQOuHoAP0sQACQScUhNvuHQwzTvnOk6DLYE99j0qyeMjyYYnGk3muG
      8lcNY3k2h4O9Hei6Do7yLjyUXHVVhIctigWMXQC8KS0xgYMeQjsi27ZdGy+4pUZqmgaBnswe
      fxCG0jr1gM/GTBQPY+hVVQUlj7bIsFtzDCdiAgelVYEoikj2q4vpwEyKdlWE6SGq2z2+xhih
      PNZwYRkaps/UyIODfbz77q1TypuiKEiy/b8kjmX6pkZ2E2GCOVlMM2CxJo+c3Zq9+vw1vPX9
      7wLoRoD+1JrzFjQsBhW+PQtD0zClOmq1GmanvPsm1pYLePDgvvMYbLunvmgQxisAPpYsU/W3
      Arzz9pug7/0l/s9//8/467/4BjqdTrcCWsLdSmBrzvepVCqYCZgI80d/+L/xg++/GehcLxz1
      1z0iGRegVrdACMGDu5/g6kL4IdAn8WsGBQBKa6NSLvkyK88Xsihubzh+dufObazmhn98x+vn
      91HFy288ULtWxItrK/i1n72Bl2Mb+Jvf/S/4/d/+b1iddzZxHtEvO2l/ZxNLs94qx/UgVbF+
      6+89RTT6RVVVx61Z3KjBNE0Y7dLAevlDQ/xvDTlbRql4cKorzCAEnoXS6DVSEELwk+99E6/c
      XPE9jrOMNyHGj9bud3lTHiu7s1MZ/Orrz+I//coari66vw2J1umxSxNCUHz4gWPtGi+wRhtf
      vJ7E2z/4fqDz3SgWi5jP93qnn1vJ491bt2C19keqAAetxbNUSOHh/Tt9i6L1w0kRrlYryBr7
      oXi6xyYAhBDPSjAAMESHYXjba2qaBs7qDWug6cEPQkqge5rmbWxsYFkI1hBDkiQkaRVrV+aw
      8e63Q3eWFYvO4RnPXV/AP739Jgrx0RbsJYQE2gLdWJ7Go08HR3ieZSZF9/QO+843/xJfe/mG
      72s5MTYBsG0bjI+lc9pHcny9XkcuoNk7E2N6BOCfvvd3+BcvXA10vc3NTSzku7rDa09l8L3v
      /kOwgfXhYH8fsw4rAAAc3H0Hn316NBGgRxBCBpZGdyKTjMNo+y99v7ZcwP37jxVhVVVhlu76
      Xkn6MVYBGJQNdpJ8OuZZALY2H+HaQv96pG5MZxOn6oR2Oh0wzY2+XQUHsb25gaeWu57lG8sz
      2Pzn73heybygyy3E+mRB/Yd/9SXMj7iTJSFkYGVoJ2I8i6++8ozv8+YLGZR2HgZbJ5sAAA1J
      SURBVCvCb33/TfzMs+Ep+WMTAMuyfDkuCpmE5+T4rsLqruz2vU8uiWr5cbjud7/zLbz+meBm
      xMr+JjLJx9ajL9+cwpv/8PeBr3cWS+v0dSYuzuRAjzh9s1vYIIAViKLwa7/0Bd/nCTx3rAjb
      to3d2/+IK/Peqnp7YawCMCgb7CTZVByNmrcCtlKjN+PLK+lEDGKrWzrEtm3UH76LuSHi6Inc
      OPWAXlucRvnOW6GtArbWGflD7oaXwrhhc6QI37n9CZ7OhVulb2wCoGkaOB9bIIFjvSfH96lB
      6YVkXDiuQvHB++/jhYXgGUa2bQNKbx2en1nL4XvfDWcVID79I2FDCHHtEDkKComuX+bWD/4O
      r37maqjXHttUJEnyVcNF4L2FQxiGAcYY8qHQOyCE4JMffxcvPhVciaxWq5hJ9drgV+amsPfh
      m9C04ePXzzrBxo1lWcCQJcn98vTSFH74w7eRN4tgQk7yGZsAtFotZAckQ5+EpinHToJnqdfr
      yApDhh3oEsrlMjLGgSfTaT/WHz7EjUVnXeRXPr+CP/uD3x7KOaaqKjgMHwE5DLqu91XCR8XC
      dBZ//Se/jzd+KvzecWNcATr+a7h4eNvt7GxjdS6gx/YQS5Pw3b/7K3z5patDXWdnax1zU84m
      ykwqjteXdPzVn/1R4DihSqWC+T7XHxdeK0OHicBz+M1f+xnER1CgLBQBaNcr+PjOfajNA1Ra
      HWzv9dp7FUnybbu1tMHx+Hvbm1icGc70x9oqpO33h26DZIhV1zkuzeaxxm7jO9/8y0BCUCwW
      MZsfPktuGGRZRsJLb4CQWV0Iz/JzklBSmjJTM4jV6rB0Fe/e2cbP/eyrPSmRzWYDyRzvL01P
      7wz0pDaKO0gtxodKon9qIYPpXGrgNQalROqtEghZdX24n16ZQeveLfzorSy+8NqXfI3zYH8P
      r02lR9Ke1WtKpCzL4FjmwraIPSLUlMh6pYjd3T1khGW8cPNpbO0c4MaVxVOpdYauIxUfnA55
      klSMhaqqrrnBrNUBTQ9XAeqV5656Os4tJVLXdQi25Gl+rz53BW++/23cmyrg+Rde9DxOud1A
      fJofSbUHrymRuqYhxo9mDOPkKCUyFAGYmpnHV77iXoRV12TfDRqmUgKazWZfATBN89AEOvn2
      Rdvb21id8b49+ernruHrf/u/sHr1t5BOe9vXW1oHLDP+7cdJDMNAesxK8CgZmxhTAdpZpuO8
      awXnVquFlEvCyzj59MF9XF30F47xxmdXfHmJbVUcykoVBooiP1EdM8cXDRqgo3e3V0B/b/DW
      1iauzo829sUr7eq+7xpCc1MZFB9+6FkhJgMKeY0DTdO8Nci7IIxvIxdAABIxHrLY3xu8ux08
      Bihs5EYxUABdxq55atQBdFeASeO1O8xFYXxboABZRALPulZwbpR2z0XlNkIIGD1YOMbrL171
      FDKt6zoEavLdKrul0SMB8I2h+q+xw3MsdNnlraeMoJleABqNBrJcMF1krpBB8eEHA7dB5XIZ
      s7kR1Tv3QbcgbSQAvmECZBEB6FvC3LIs0Ho4tYOGZXt7G1dmg0eQZqzB26BisdjXyzxWxhwH
      NGrGIgC2bQfSAQDA7hMO0W63kebPhzNma+NTrAZMyAGAL720iu+/6b4NOtjfx8KIk108EQmA
      f7ot7YOdy9jOgrOzs4Pl6cmGBRzRLO8OFUYxX8jiYMA2SGrXh+6HFQYkEgD/WJYFyg6mwDG2
      6hhBub25jitzwd+6YcLqraGTVNJmrSc3+SSWKo6k4Z1f7IAr+XllfAIQsI5jOs455ga3qv5q
      zIwKwzBAHJJg/PL6S6t4+63vu9xInrgTDADooLrcOWUsAmCaJlgf6ZAnefHGPP7m//1pT3CW
      LYXfAT0IxWIR831b0HhnvpBFY/tu322QpZ4PhT/SAQIgSRJSiWAPyeJ0Fr+wquKP/sdvodns
      2toty4Itnw8BeLSxjqeWwgnVFZQDyHIfc7HHziqjxm9d0PNOKAJg6Qq2dw9g6Qp0i6DTOW25
      abVaQzmsZvJp/JufnsGf/85/xUcffYhOpxO4DlDYNOo1JOPhJGp84dkFx96/uq6DsYYvBOuX
      g4MD3L1791SxX/ZiB4H2EIpHY+PRNgpZAZtbW1ARw8z0NE7aZ9rtFlJDZhGxDIN/+8ZNvPXO
      n+BHP5jD50LYdpw35qez+MF774N89WunqtJVq1XMT43f4vWtv/kLPMfv4E/+vAErVoCVmEN9
      exN4+XyEn4RBKAJAMywSyRgqVRFVUcby0uKpzy3TAhWSAvf6Z69hrdbCVGY5lOudN+aYBr7x
      f/8UX/v5X0Q2mwVFUTg4OMBMbvwCQFEUXr65ipdvrgLohnwYL7ww9nGMklAEYG46h0f7DVy7
      toJlLgOpVQcSoyvRPV84Bw6hEfHlz16FqtXw7d//TdRIHoXVF2DaBG8MmfYZBhRFBa6Yd14J
      ZTapXAE3c48VweTMNGzbhmEYaLfboGgat4sGyto5bTnkkbLKQ1VVtNttKIoCQgg4XsC7WzLi
      sXCLRRXmr6AAoF65jR9/8BAzX3oBND06BVRE6rg17dHchHgSP/zUvU/XRYWLZbvPJhlhKxNR
      FHuynWzb7kmnu4j/u+xzI4R0C+V6+B+AUzrNefrf2HX6oy9HluSe/zkdp+v68cD7HXf0xTv9
      AD3XUyVsbu3AGnBcpXQAWTP6Xu88zk3ptLC1ezDwuOL+HnTTAulz335zI4SgWtpHpdEGRVE9
      5x79z7YNKIp+/L+zZeaP/kcIQatRQ7FUAXE5zrZMlA4OUCyVYVh23+MsU4emm1BkBXC5nmno
      MC0bmqaNXwCO2N/6FB9+che1hnsUpCaLuPPJR/jk7gMYlrMzTVMk7O3tYW9vDx3ZvZjWxsYW
      FmbTWN/Yc429mSpM4aNbP8JOyX/I9aMHt3H73n20RHfTpdRu4uMP38e9h5uw+4xF7rSP5yZr
      7lugze09zGYobOzUXec2PZ3HO299D+WGnwwzAtuSUamraO7vuJfnsi28+5N38HB907WNnamJ
      2Cs1kUwk4GYiMZQ2mh0dteIB7tx70Pe4g81P8d77H+P+p+uu/uri1iPIhoWNjUeTE4BMvgAW
      FrQBRWM1TUOmMI+1a0vQ+jwAsUQKmVQCsHSUqu6JKZl0Ats7JRhaB5rZ/2uqloqYWX4Ky3P+
      TX5TM9Mgmgq9j8AeoWkqZhauYGV2qq9wJ9NZpOICbE1EtekuUMk4j91iE2qn7vrgHeztY/WZ
      5zGb8+ebKR1UYBMVJsO7Ko8Uw2N5eR4Mx7k+YAwngLI0lMtV1weWT2TB0zpi2SmsLvev3D0z
      v4hr169hfto9RmxuaRGf/PN7yE/PTk4AREmBpStoNd1d/NVKGbsbD7G+XXX1JhNCQCgaccHd
      KWUYCiwLSGXyiLn00qo3RSxOx/Hphn8lUFZ16KqIZtO902WtdoCNu7ex39AguCSa24QALI8Y
      5/5zGYYEYgKZ/CxYl+C8tqRiJmFiY9dPFhuF+cUFNPfKYGOcq4BZhgRJpSDXK2jKLkJLMcjl
      cxDbTdeWG4TYiMWTEBsNZHL9qwCyfAyN8j4aHdl1RSntF5HI5lCvlCYjALLYhGkTxFJZzMz0
      l1ZCCOaWVrGyMo/CdP83sdxuoFSpQZZlMFx/hxshBLwQQ6NWBSe4C9Pc7DR29mtY9FmRrF2v
      wLIppPKzmHFoZXTyHosra1hansO0i5OrXa+gWm9ClhSwLs5EQggEIYZypYZ4ov9LgBCCmUIO
      u2UJS74KChBQFI1YnEWzLcEtLpVhE5gtpGABMDW3zRKBbduIxeOuDyyA4+PcrrW3tweGZcBw
      XP/rEQIhEUN1fwdzy6uTEQCaosCxHHieB+diV64fbOHWex9AVEwwLo60RCaPtbU1rD2zBtql
      /EpxawNCIgOG56Aq/Ss1y+0Gas02Dna3UGv6S0SnGQYsx4HjeNfUwf1HD/DPH3wMzaLg5iPM
      TM1gbW0Nzzz7FCy1/5g319eRTqQgpPhjBdSJdr2CVkfGztYGmgN0lNMQPHq0i+nlFXz+xc+4
      PDgEdz7+CLVaEXxqDjP5fkJGsL+zA0mWYRG4CACBrqmQxBZMm3I5zoasEqytrYHWlL4rlNap
      o6WzeOONr6C0tzshAWCYY6uG7bJPLiys4quvfxHtWgkdlwf2CIpiMTvb/42dSCXxaHMHzz9/
      07W2ja4pKJXKWLnxLGb69OPqB03TACEAbFgu5QOXrq3hS1/4HCqlAyj64AhLio5h1sUZlkoI
      WN9v4MVnroF2mZsid1AqVfD0cy8hl/ITTkLB1CTU6jV8+vCRyxaIwo2nnwLLCtCVtutxy6vX
      sba2hvmprMtxBA/uPYCuK0ikcy4CwGB6KokHDx4gni/01VEIxUAVG3i4/qi7UozbDwAAUquO
      vXINFLpV5Qo554esfrCFWx8/wNLyChYWl/oeFzamrkE5XLqFWNzR+9lvbs1aGeV6CxSA2fll
      ZNPOy/beo/u4vb6LleVlLC5f8VU6fhh0TYWmd1fJWDzh+CLoN7dJQoiN0kEJs4sLob61/z+Y
      pY3Z+gd8qwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='64' name='SUMMARY' width='192'>
      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
    </thumbnail>
    <thumbnail height='167' name='Sales Performance' width='192'>
      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
    </thumbnail>
    <thumbnail height='187' name='Shippment mode trends' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
